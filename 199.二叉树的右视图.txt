给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。

示例:

输入: [1,2,3,null,5,null,4]
输出: [1, 3, 4]
解释:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---

【思路】BFS，记录每一层最右边节点值
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> bfsque;
        vector<int> res;
        if(!root)   return res;
        bfsque.push(root);
        while(!bfsque.empty()){
            for(int i=bfsque.size();i>0;i--){
                TreeNode* tmp=bfsque.front();
                bfsque.pop();
                if(i==1)
                    res.push_back(tmp->val);
                if(tmp->left)
                    bfsque.push(tmp->left);
                if(tmp->right)
                    bfsque.push(tmp->right);
            }
        }
        return res;
    }
};