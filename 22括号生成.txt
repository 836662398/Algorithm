数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。

示例：
输入：n = 3
输出：[
       "((()))",
       "(()())",
       "(())()",
       "()(())",
       "()()()"
     ]

方法一：回溯
class Solution {
public:
    string unit;
    vector<string> res;
    vector<string> generateParenthesis(int n) {
        int left=n,right=n;
        helper(n,n,n);
        return res;
    }
    void helper(int left,int right,int n){
        if(!left&&!right){
            res.push_back(unit);
        }
        if(right<left)
            return;
        if(left>0){
            unit.push_back('(');
            helper(left-1,right,n);
            unit.pop_back();
        }
        if(right>0){
            unit.push_back(')');
            helper(left,right-1,n);
            unit.pop_back();
        }    
    }
};
方法二：BFS
class Solution {
public:
    vector<string> res;
    vector<string> generateParenthesis(int n) {
        int left=n,right=n;
        helper(n,n,"");
        return res;
    }
    void helper(int left,int right,string s){
        if(!left&&!right)
            res.push_back(s);
        if(right<left)
            return;
        if(left>0)
            helper(left-1,right,s+"(");
        if(right>0)
            helper(left,right-1,s+")");  
    }
};

