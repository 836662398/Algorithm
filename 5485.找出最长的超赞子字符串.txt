

给你一个字符串 s 。请返回 s 中最长的 超赞子字符串 的长度。

「超赞子字符串」需满足满足下述两个条件：

    该字符串是 s 的一个非空子字符串
    进行任意次数的字符交换重新排序后，该字符串可以变成一个回文字符串

 

示例 1：

输入：s = "3242415"
输出：5
解释："24241" 是最长的超赞子字符串，交换其中的字符后，可以得到回文 "24142"

示例 2：

输入：s = "12345678"
输出：1

示例 3：

输入：s = "213123"
输出：6
解释："213123" 是最长的超赞子字符串，交换其中的字符后，可以得到回文 "231132"

示例 4：

输入：s = "00"
输出：2

提示：
    1 <= s.length <= 10^5
    s 仅由数字组成

【思路】前缀和+状态压缩
超赞字符串：字符串中奇个数的字符最多有一种。
class Solution {
public:
    int longestAwesome(string s) {
        unordered_map<int,int> memo;
        memo[0]=-1;
        int n=s.size();
        int pre=0,res=INT_MIN;
        for(int i=0;i<n;i++){
            int x=s[i]-'0';
            pre ^= (1<<x);
            for(int j=0;j<=9;j++){//奇个数字符有一种9个情况
                int xuqiu= (1<<j) ^ pre;;
                if(memo.count(xuqiu))
                    res=max(res,i-memo[xuqiu]);
            }
            if(memo.count(pre))//没有奇个数字符，每种字符数量都为偶数
                res=max(res,i-memo[pre]);
            if(memo.count(pre)==0)
                memo[pre]=i;
        }
        return res;
    }
};