将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。

比如输入字符串为 "LEETCODEISHIRING" 行数为 3 时，排列如下：

L   C   I   R
E T O E S I I G
E   D   H   N

之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："LCIRETOESIIGEDHN"。

请你实现这个将字符串进行指定行数变换的函数：

string convert(string s, int numRows);

示例 1:

输入: s = "LEETCODEISHIRING", numRows = 3
输出: "LCIRETOESIIGEDHN"

示例 2:

输入: s = "LEETCODEISHIRING", numRows = 4
输出: "LDREOEIIECIHNTSG"
解释:

L     D     R
E   O E   I I
E C   I H   N
T     S     G

【方法一】根据数学运算算出每个数对应行数
class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)  return s;
        int oneround=2*numRows-2;
        vector<string> onerow(numRows);
        int len=s.size();
        for(int i=0;i<len;i++){
            int mo=i%oneround;
            if(mo<numRows)
                onerow[mo].push_back(s[i]);
            else
                onerow[2*numRows-2-mo].push_back(s[i]);
        }
        string res;
        for(int i=0;i<numRows;i++)
            res.append(onerow[i]);
        return res;
    }
};
【方法二】
从左到右迭代 sss，将每个字符添加到合适的行。可以使用当前行和当前方向这两个变量对合适的行进行跟踪。
只有当我们向上移动到最上面的行或向下移动到最下面的行时，当前方向才会发生改变。
class Solution {
public:
    string convert(string s, int numRows) {
        if(numRows==1)  return s;
        vector<string> onerow(numRows);
        int len=s.size(),rownum=0;
        bool upordown=false;
        for(int i=0;i<len;i++){
            onerow[rownum].push_back(s[i]);
            if(rownum==0||rownum==numRows-1)    upordown=!upordown;
            rownum+= upordown? 1:-1;
        }
        string res;
        for(int i=0;i<numRows;i++)
            res.append(onerow[i]);
        return res;
    }
};





