判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:
输入: 121
输出: true

示例 2:
输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

进阶:
你能不将整数转为字符串来解决这个问题吗？

【方法一】逐位判断
class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0) return false;
        if(!x)  return true;
        int len=log10(x)+1;
        int left=len,right=1;
        int leftnum,rightnum;
        while(right<left){
            leftnum= ( x /(int) pow(10,left-1)) %10;
            rightnum=(x % (int) pow(10,right) )/ (int) pow(10,right-1);
            if(leftnum!=rightnum)
                return false;
            right++;
            left--;
        }
        return true;
    }
};
【方法二】取出后半段数字进行翻转，更优
class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0||(x % 10 == 0 && x != 0)) return false;//个位为0，直接false
        int revertedNumber=0;
        while(x>revertedNumber){
            revertedNumber=revertedNumber*10+ x%10;
            x/=10;
        }
        return (x==revertedNumber || x==revertedNumber/10);
    }
};
