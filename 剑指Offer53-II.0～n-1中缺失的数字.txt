一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。

示例 1:
输入: [0,1,3]
输出: 2

示例 2:
输入: [0,1,2,3,4,5,6,7,9]
输出: 8

限制：
1 <= 数组长度 <= 10000

【思路】有序数组搜索，用二分或双指针，这题双指针最优。
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int left=0,right=nums.size();//结果为[0,nums.size()] ,包括nums.size(),mid永远不会取到nums.size()，不用担心数组越界
        while(left<right){
            int mid=(left+right)/2;
            if(nums[mid]==mid){
                left=mid+1;
            }
            else{
                right=mid;
            }
        }
        return left;
    }
};