输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。

示例 1:
输入: n = 1
输出: [1,2,3,4,5,6,7,8,9]

说明：

    用返回一个整数列表来代替打印
    n 为正整数
    需要打印的数可能超出内置类型能表示的范围

【思路】大数打印：
用字符串来代替数来打印，解决大数问题。需要考虑：进位、超出范围，以及打印时要省略高位的0。
bool increase(string& num,int n){
    int carrybit=0;//进位
    int bit=0;//当前位的数
    for(int i=n-1;i>=0;i--){
        bit=num[i]-'0'+carrybit;
        if(i==n-1){//如果是第一位，当前数+1
            bit++;
        }
        if(bit>=10){
            if(i==0)
                return false;//超出范围
            bit-=10;
            carrybit=1;
        }
        else
            carrybit=0;
        num[i]=bit+'0';
    }
    return true;
}
void print(const string& num,int n){
    bool flag=false;
    for(int i=0;i<n;i++){
        if(num[i]!='0')
            flag=true;
        if(flag)
            cout<<num[i];
    }
    cout<<" ";
}
void printNumbers(int n) {
    string num(n,'0');
    while(increase(num,n)){//判断是否超出范围
        print(num,n);
    }
}